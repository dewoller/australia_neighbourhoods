if (FALSE) {

  source('_drake.R')

  readd(map_mesh) %>%
    head(20) %>%
    mutate( s2=s2_geog_from_wkb(st_as_binary(geometry), check=FALSE)) %>%
    st_drop_geometry() %>%
    mutate( geometry=s2) %>%
    rename(id = MB_CODE16) %>%
    select( id, geometry) %>%
    { . } -> df_to_geo_s2

  df_to_geo_s2  %>%
    mutate( point = s2_centroid( geometry)) %>%
    select( id, point) %>%
    { . } -> df_from_point_s2

  max_size=1000

  point_within_geo_dist( df_from_point_s2, 'MB_CODE16', 'point', df_to_geo_s2, 'MB_CODE16', 'geometry', max_size=5000)



}

point_within_geo_dist <- function( df_from_point_s2, id_point = 'MB_CODE16', from_point='point',
                                  df_to_geo_s2, id_geo = 'MB_CODE16', to_geo = 'geometry',
                                  max_size=5000) {

  # assumes all the id columns are called id
  # point is called point, geo is called geometry
  output_id = paste0( 'to_', id_geo)

  browser()

  df_from_point_s2 %>%
    mutate( to_id = map( !!sym(from_point), ~s2_dwithin_matrix( .x, df_to_geo_s2[,to_geo], max_size))) %>%
    mutate( to_id = map(to_id, 1, )) %>%
    select(-!!sym( from_point )) %>%
    mutate( !!output_id  := map( to_id, function(x) { df_to_geo_s2[ x, id_geo ] })) %>%
    unnest( !!output_id  )

}
